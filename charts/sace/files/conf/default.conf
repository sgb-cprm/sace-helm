{{- $nginx := (include "nginx.fullname" .Subcharts.nginx ) -}}

server {
    listen       {{ .Values.nginx.service.port | default 8080 }};
    server_name  {{ (mustFirst .Values.nginx.ingress.hosts).host }} {{ $nginx }}.{{ .Release.Namespace }}.svc.cluster.local {{ $nginx }};

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;

    location = /50x.html { 
        root   /usr/share/nginx/html;
    }

    location = resources.json {
        add_header  Content-Type    application/json;
    }

    {{- if .Values.geoserver.enabled }}
    {{- $geoserver := (include "geoserver.fullname" .Subcharts.geoserver ) | default "geoserver" }}
    location /geoserver {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://{{ $geoserver }}.{{ $.Release.Namespace }}.svc.cluster.local:8080/geoserver;
    }
    {{- end }}

    {{- range .Values.nginx.selectedConfigs }}

    location /{{ . }}/ {
        proxy_pass http://{{ $.Release.Name }}-{{ . }}.{{ $.Release.Namespace }}.svc.cluster.local:8082/{{ . }}/;
        proxy_redirect off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location = /{{ . }} {
        return 301 $scheme://$host/{{ . }}/;
    }

    {{- end }}
}